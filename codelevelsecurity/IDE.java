/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codelevelsecurity;

import static codelevelsecurity.MainFrame.c;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Taranpreet Kaur
 */
public class IDE extends javax.swing.JFrame {

    String path1 = "F:\\ide\\temp";
    String filename = "";

    /**
     * Creates new form IDE
     */
    public IDE() {
        //setUndecorated(true);
        initComponents();
        setSize(Toolkit.getDefaultToolkit().getScreenSize());//to set the size of screen
        setResizable(false);
        c = this.getContentPane();
        File f = new File(path1);
        if (!f.exists()) {
            f.mkdir();
        }
    }

    private void save() {

        JFileChooser jf = new JFileChooser("F:\\ide\\");
        int i = jf.showSaveDialog(this);
        if (i == JFileChooser.CANCEL_OPTION)//for cancel
        {
            taNew.setText("");
            taNew.requestFocus();
        } else if (i == JFileChooser.APPROVE_OPTION) {
            String path = jf.getSelectedFile().getPath();
            //String filename = jf.getSelectedFile().getName();
            // System.out.println("filename "+path);
            System.out.println(path1);
            //String path1 = jf.getSelectedFile().getPath();
            filename = jf.getSelectedFile().getName();
            FileWriter fw = null;
            FileWriter fw1 = null;
            try {
                fw = new FileWriter(path + ".java", true);//constructor of filewriter,told by someone(payal).
                fw1 = new FileWriter(path1 + "/" + filename + ".java", true);
                fw.write(taNew.getText());
                fw1.write(taNew.getText());
                taNew.setText("");
                taNew.requestFocus();
                JOptionPane.showMessageDialog(this, "File Saved", "save", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                System.out.println("exception in ide " + ex);
            } finally {
                try {
                    fw.close();
                    fw1.close();
                } catch (Exception e) {
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taNew = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        taNew1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        miNew = new javax.swing.JMenuItem();
        miOpen = new javax.swing.JMenuItem();
        miSave = new javax.swing.JMenuItem();
        miSaveAs = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();
        mnuExecute = new javax.swing.JMenu();
        miCompile = new javax.swing.JMenuItem();
        miRun = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 92, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taNew.setColumns(20);
        taNew.setRows(5);
        jScrollPane1.setViewportView(taNew);

        taNew1.setColumns(20);
        taNew1.setRows(5);
        jScrollPane2.setViewportView(taNew1);

        mnuFile.setText("File");

        miNew.setText("New");
        miNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewActionPerformed(evt);
            }
        });
        mnuFile.add(miNew);

        miOpen.setText("Open");
        miOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenActionPerformed(evt);
            }
        });
        mnuFile.add(miOpen);

        miSave.setText("Save");
        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveActionPerformed(evt);
            }
        });
        mnuFile.add(miSave);

        miSaveAs.setText("SaveAs");
        mnuFile.add(miSaveAs);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        mnuFile.add(miExit);

        jMenuBar1.add(mnuFile);

        mnuExecute.setText("Execute");

        miCompile.setText("Compile");
        miCompile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miCompileActionPerformed(evt);
            }
        });
        mnuExecute.add(miCompile);

        miRun.setText("Run");
        miRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRunActionPerformed(evt);
            }
        });
        mnuExecute.add(miRun);

        jMenuBar1.add(mnuExecute);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
        JFileChooser jfc = new JFileChooser("F:\\ide\\");
        int i = jfc.showOpenDialog(this);
        if (i == 1) {
            taNew.requestFocus();
        } else {
            String path = jfc.getSelectedFile().getPath();
            filename = jfc.getSelectedFile().getName();
            try {
                FileReader fr = new FileReader(path);
                System.out.println(path);
                int c;

                while ((c = fr.read()) != -1) {
                    taNew.append(String.valueOf((char) c));
                }

            } catch (Exception ex) {
                System.out.println("Exception in opening file " + ex);
            }

        }

    }//GEN-LAST:event_miOpenActionPerformed

    private void miNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewActionPerformed

        if (taNew.getText().isEmpty()) {
            //taNew.setText("");
            taNew.requestFocus();
        } else {
            save();

        }

        taNew.setText("");
        taNew.requestFocus();


    }//GEN-LAST:event_miNewActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed

        File f = new File(path1);

        File f1[] = f.listFiles();
        for (int i = 0; i < f1.length; i++) {
            File f2 = f1[i];
            f2.delete();
        }
        f.delete();
        LoginFrame lf = new LoginFrame();
        lf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_miExitActionPerformed

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveActionPerformed
        save();
        JOptionPane.showMessageDialog(this, "File Saved", "save", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_miSaveActionPerformed

    private void miCompileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCompileActionPerformed
        //  JFileChooser jf = new JFileChooser("F:\\ide\\");
        //String filename = jf.getSelectedFile().getName();
        System.out.println("path " + path1 + " filename" + "\\" + "" + filename);
        String cmd = "javac -cp .; " + path1 + "\\" + filename;
        System.out.println("comand " + cmd);
        Runtime rt = Runtime.getRuntime();
        try {
            Process p = rt.exec(cmd);
            InputStream is = p.getInputStream();
            InputStream ie = p.getErrorStream();
            int c;
            while((c=is.read())!=-1)
            {
                taNew1.append(String.valueOf((char)c));
            }
            c=0;
            while((c=ie.read())!=-1)
            {
                taNew1.append(String.valueOf((char)c));
            }
        } catch (Exception e) {
            System.out.println("Exception " + e);
        }
    }//GEN-LAST:event_miCompileActionPerformed

    private void miRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRunActionPerformed
        //JFileChooser jf = new JFileChooser("F:\\ide\\");
        //String filename = jf.getSelectedFile().getName();
        System.out.println("hello ");
        String file = filename.substring(0, filename.lastIndexOf("."));
        System.out.println("file " + file);
        String cmd = "java -cp .;" + path1 + " " + file;
        System.out.println("command " + cmd);
        Runtime rt = Runtime.getRuntime();
        try {
            Process p = rt.exec(cmd);
            InputStream is = p.getInputStream();
            InputStream ie = p.getErrorStream();
            int c = 0;
            while ((c = is.read()) != -1) {
                System.out.print("Run1 " + (char) c);
                taNew1.append(String.valueOf((char) c));
            }
            c = 0;
            while ((c = ie.read()) != -1) {
                //System.out.print("Run "+(char)c);
                taNew1.append(String.valueOf((char) c));
            }
        } catch (Exception e) {
            System.out.println("Exception " + e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_miRunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IDE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JMenuItem miCompile;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miNew;
    private javax.swing.JMenuItem miOpen;
    private javax.swing.JMenuItem miRun;
    private javax.swing.JMenuItem miSave;
    private javax.swing.JMenuItem miSaveAs;
    private javax.swing.JMenu mnuExecute;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JTextArea taNew;
    private javax.swing.JTextArea taNew1;
    // End of variables declaration//GEN-END:variables
}
